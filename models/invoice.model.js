const mongoose = require("mongoose");

const InvoiceSchema = new mongoose.Schema({
  branchId: Number,
  isApplyVoucher: Boolean,
  purchaseDate: Date,
  customerId: mongoose.Schema.Types.ObjectId,
  discount: Number,
  totalPayment: Number,
  saleChannelId: Number,
  method: String,
  accountId: Number,
  usingCod: Boolean,
  soldById: mongoose.Schema.Types.ObjectId,
  orderId: mongoose.Schema.Types.ObjectId,
  invoiceDetails: [
    {
      productId: mongoose.Schema.Types.ObjectId,
      productCode: String,
      productName: String,
      quantity: Number,
      price: Number,
      discount: Number,
      discountRatio: Number,
      note: String,
      serialNumbers: String,
    },
  ],
  deliveryDetail: {
    deliveryCode: String,
    type: Number,
    status: Number,
    price: Number,
    receiver: String,
    contactNumber: String,
    address: String,
    locationId: Number,
    locationName: String,
    wardName: String,
    weight: Number,
    length: Number,
    width: Number,
    usingPriceCod: Boolean,
    height: Number,
    partnerDeliveryId: mongoose.Schema.Types.ObjectId,
    expectedDelivery: Date,
    partnerDelivery: {
      code: String,
      name: String,
      address: String,
      contactNumber: String,
      email: String,
    },
  },
  payments: [
    {
      method: String,
      methodStr: String,
      amount: Number,
      id: Number,
      accountId: Number,
      voucherId: Number,
      voucherCampaignId: Number,
    },
  ],
  customer: {
    id: mongoose.Schema.Types.ObjectId,
    code: String,
    name: String,
    gender: Boolean,
    birthDate: Date,
    contactNumber: String,
    address: String,
    email: String,
    comment: String,
  },
});

module.exports = mongoose.model("Invoice", InvoiceSchema);
